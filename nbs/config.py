# AUTOGENERATED! DO NOT EDIT! File to edit: py config.ipynb.

# %% auto 0
__all__ = [
    "load_env",
    "get_RSS_URL",
    "get_gemini_api_key",
    "get_openai_api_key",
    "get_google_projectID",
    "get_google_auth_file",
    "get_azure_openai_keys",
]

# %% py config.ipynb 1
from dotenv import load_dotenv, find_dotenv
import os


def load_env() -> None:
    """
    Charge les variables d'environnement à partir d'un fichier .env.
    """
    _ = load_dotenv(find_dotenv())


# %% py config.ipynb 3
def get_RSS_URL() -> str:
    """
    Récupère l'URL du flux RSS à partir des variables d'environnement.

    Returns:
        str: L'URL du flux RSS. Si la variable d'environnement `RSS_LMELP_URL` n'est pas définie,
        retourne une URL par défaut.
    """
    load_env()
    RSS_LMELP_URL = os.getenv("RSS_LMELP_URL")
    if RSS_LMELP_URL is None:
        RSS_LMELP_URL = "https://radiofrance-podcast.net/podcast09/rss_14007.xml"
    return RSS_LMELP_URL


# %% py config.ipynb 6
def get_gemini_api_key() -> str:
    """
    Get the Gemini API key from environment variables.

    Returns:
        str: The Gemini API key.
    """
    load_env()
    gemini_api_key = os.getenv("GEMINI_API_KEY")
    return gemini_api_key


def get_openai_api_key() -> str:
    """
    Get the OpenAI API key from environment variables.

    Returns:
        str: The OpenAI API key.
    """
    load_env()
    openai_api_key = os.getenv("OPENAI_API_KEY")
    return openai_api_key


def get_google_projectID() -> str:
    """
    Get the Google Project ID from environment variables.

    Returns:
        str: The Google Project ID.
    """
    load_env()
    google_projectID = os.getenv("GOOGLE_PROJECT_ID")
    return google_projectID


def get_google_auth_file() -> str:
    """
    Get the Google authentication file path from environment variables.

    Returns:
        str: The path to the Google authentication file.
    """
    load_env()
    google_auth_file = os.getenv("GOOGLE_AUTH_FILE")
    return google_auth_file


def get_azure_openai_keys() -> tuple[str, str, str]:
    """
    Get the Azure OpenAI keys from environment variables.

    Returns:
        tuple: A tuple containing the Azure API key, endpoint, and API version.
    """
    load_env()
    azure_api_key = os.getenv("AZURE_API_KEY")
    azure_endpoint = os.getenv("AZURE_ENDPOINT")
    azure_api_version = os.getenv("AZURE_API_VERSION")
    return azure_api_key, azure_endpoint, azure_api_version
