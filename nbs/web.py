# AUTOGENERATED! DO NOT EDIT! File to edit: py web helper.ipynb.

# %% auto 0
__all__ = ["load_env", "get_WEB_filename", "WebPage"]

# %% py web helper.ipynb 2
from dotenv import load_dotenv, find_dotenv
import os


def load_env():
    _ = load_dotenv(find_dotenv())


def get_WEB_filename():
    load_env()

    WEB_LMELP_FILENAME = os.getenv("WEB_LMELP_FILENAME")
    if WEB_LMELP_FILENAME is None:
        WEB_LMELP_FILENAME = "/home/guillaume/git/lmelp/db/À écouter plus tard I Radio France/À écouter plus tard I Radio France.html"
    return WEB_LMELP_FILENAME


# %% py web helper.ipynb 5
from bs4 import BeautifulSoup


class WebPage:
    def __init__(self):
        file_path = get_WEB_filename()

        # Lire le contenu du fichier HTML
        with open(file_path, "r", encoding="utf-8") as file:
            html_content = file.read()

        # Analyser le contenu HTML avec BeautifulSoup
        soup = BeautifulSoup(html_content, "html.parser")

        # Extraire les informations des épisodes
        self.episodes = []

        # Rechercher les éléments contenant les informations des épisodes
        for item in soup.find_all("li", class_="Collection-section-items-item"):
            title_element = item.find("span", class_="CardTitle")
            link_element = item.find("a", class_="underline-hover")
            description_element = item.find("div", class_="CardDescription")
            date_elements = item.find(
                "div", class_="DefaultDetails-secondLine"
            ).find_all("p")

            if (
                title_element
                and link_element
                and description_element
                and len(date_elements) >= 3
            ):
                title = title_element.get_text(strip=True)
                url = link_element["href"]
                description = description_element.get_text(strip=True)
                date = date_elements[0].get_text(strip=True)
                duration = date_elements[2].get_text(strip=True)

                self.episodes.append(
                    {
                        "title": title,
                        "url": url,
                        "description": description,
                        "date": date,
                        "duration": duration,
                    }
                )

    def __str__(self):
        output = ""
        for episode in self.episodes:
            output += f"""
Title: {episode['title']}
URL: {episode['url']}
Description: {episode['description']}
Date: {episode['date']}
Duration: {episode['duration']}

            """
        return output

    def __repr__(self):
        return self.__str__()

    def __getitem__(self, index):
        return self.episodes[index]

    def __len__(self):
        return len(self.episodes)
